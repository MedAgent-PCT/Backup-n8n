{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Orchestrate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reranker Cohere": {
      "ai_reranker": [
        [
          {
            "node": "med_RAG",
            "type": "ai_reranker",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "med_RAG",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Orchestrate",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Orchestrate",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "med_RAG": {
      "ai_vectorStore": [
        []
      ],
      "ai_tool": [
        [
          {
            "node": "Orchestrate",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ],
      "main": [
        []
      ]
    },
    "fetch_content": {
      "ai_tool": [
        [
          {
            "node": "Orchestrate",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Doctor": {
      "ai_tool": [
        [
          {
            "node": "Orchestrate",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Orchestrate",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "web_search": {
      "ai_tool": [
        [
          {
            "node": "Orchestrate",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Orchestrate": {
      "main": [
        []
      ]
    }
  },
  "createdAt": "2025-06-28T14:02:19.059Z",
  "id": "PHbpMuYHKR9ecB2d",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "QA med",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -2740,
        -420
      ],
      "id": "f9399108-9d7a-4c32-8765-f76f04375d9f",
      "name": "When chat message received",
      "webhookId": "7e867832-f114-4fd6-90f5-5eb414eefd14"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.rerankerCohere",
      "typeVersion": 1,
      "position": [
        -2180,
        20
      ],
      "id": "3e9670d2-d2a7-4a0a-a69b-58d1635740cf",
      "name": "Reranker Cohere",
      "credentials": {
        "cohereApi": {
          "id": "BKc9JkfZm834Rmid",
          "name": "CohereApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2320,
        20
      ],
      "id": "0a532ecd-ac84-44c8-bf7f-7553db0d7b1b",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "dimaJCF43ITM5WoO",
          "name": "OpenAi account 3"
        }
      }
    },
    {
      "parameters": {
        "tableName": "orchestrate_chat_his",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -2440,
        -180
      ],
      "id": "d467e21d-2bfa-4d77-893d-daae85f4fb67",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "1YN20xd11svKzn15",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -2580,
        -200
      ],
      "id": "1dbd3eea-14db-43e3-bc05-7a9098d99a26",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "evZ0jVKEEUnhQGZc",
          "name": "Google Gemini(PaLM) Api account 6"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "=- Công cụ chuyên tìm kiếm thông tin bệnh viện y khoa Phan Châu Trinh ",
        "tableName": "documents_pg",
        "topK": 8,
        "includeDocumentMetadata": false,
        "useReranker": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.3,
      "position": [
        -2320,
        -180
      ],
      "id": "f7fd85a6-1914-4ff7-b4b6-ca8183f0200f",
      "name": "med_RAG",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "1YN20xd11svKzn15",
          "name": "Postgres account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=- Công cụ để tìm kiếm thông tin bệnh viện y khoa Phan Châu Trinh và tóm tắt thành dạng structured data\n- Công cụ để tìm kiếm thông tin về bệnh tổng quát\n-Tự động nhận diện: Hướng dẫn điều trị, Bảng phân loại bệnh, Tương tác thuốc\n-Loại bỏ quảng cáo/footer/header, chỉ giữ nội dung chuyên môn",
        "operation": "executeTool",
        "toolName": "fetch_content",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `đầu vào cho công cụ này phải có định dạng JSON như sau\n{\n  \"url\": <đường link>\n}`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -1640,
        -280
      ],
      "id": "fa6fa7f6-2342-49ce-bcd7-be7d815daa5e",
      "name": "fetch_content",
      "credentials": {
        "mcpClientApi": {
          "id": "l7gNVLTzrA47Iigk",
          "name": "DuckDuckGo"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "fDUI1Nj9SsOuE0ZB",
          "mode": "list",
          "cachedResultName": "Expert"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3000,
        -140
      ],
      "name": "Call Expert",
      "id": "8367de3c-da45-48b2-92f5-9f85007674dc"
    },
    {
      "parameters": {
        "description": "=- công cụ 'doctor' để đưa ra tư vấn tổng quát cho chịu chứng của người dùng",
        "workflowId": {
          "__rl": true,
          "value": "fDUI1Nj9SsOuE0ZB",
          "mode": "list",
          "cachedResultName": "Expert"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "={{ $json.chatInput }}",
            "sessionId": "={{ $json.sessionId }}",
            "bệnh sử": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('b_nh_s_', `đầu vào tool này có dạng JSON như sau: \n{\n \"bệnh sử\": <thông tin về bệnh sử cần tra cứu>\n}\n`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "chatInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "sessionId",
              "displayName": "sessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "bệnh sử",
              "displayName": "bệnh sử",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1920,
        40
      ],
      "id": "9991f9f8-f6d7-46f2-b30f-e7ef467fadcf",
      "name": "Doctor"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "TRUNCATE table n8n_chat_histories_overalls;\nTRUNCATE table n8n_chat_histories;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3000,
        60
      ],
      "id": "7eeb9bed-4499-4bed-8d03-0ef4a85aeebc",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "1YN20xd11svKzn15",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "description": "=**Tên tool**: `think`  \n**Mục đích**: Đóng vai trò \"bộ não phân tích\" trong quy trình xử lý, giúp đưa ra quyết định thông minh thông qua:  \n- **Đánh giá ngữ cảnh**  \n- **Phân tích rủi ro**  \n- **Tối ưu hóa hành động**  \n- **Kiểm tra tính nhất quán dữ liệu**\n\n---\n\n### CƠ CHẾ HOẠT ĐỘNG\n```mermaid\ngraph TB\n  A[Kích hoạt think] --> B{Phân loại nhiệm vụ}\n  B -->|Kiểm tra triệu chứng| C[Định danh đại từ + từ khóa bệnh lý]\n  B -->|Đánh giá nguồn| D[Tính điểm uy tín domain]\n  B -->|Xử lý mâu thuẫn| E[So sánh med_RAG vs web_search]\n  B -->|Tối ưu truy vấn| F[Chuyển hóa ngôn ngữ tự nhiên → truy vấn chuẩn]\n  C --> G[Ra quyết định]\n```\n\n---\n\n### THÔNG SỐ KỸ THUẬT\n1. **Đầu vào (Input)**:\n   ```json\n   {\n     \"thought\": \"Mô tả rõ ràng nhiệm vụ phân tích\",\n     \"parameters\": {\n       \"data_type\": \"text/url/data_array\",\n       \"evaluation_metrics\": [\"trust_score\", \"relevance\", \"consistency\"],\n       \"decision_criteria\": {\"priority_rules\": \"Ưu tiên pcthealthcare > .gov.vn\"}\n     }\n   }\n   ```\n\n2. **Đầu ra (Output)**:\n   ```json\n   {\n     \"insight\": \"Kết luận phân tích\",\n     \"confidence\": 0-100,\n     \"next_action\": \"Gợi ý hành động tiếp theo\",\n     \"risk_flags\": [\"Mâu thuẫn dữ liệu\", \"Nguồn không xác định\"]\n   }\n   ```\n\n---\n\n### ỨNG DỤNG THỰC TẾ\n#### 1. Phát hiện bệnh lý cá nhân\n```json\n{\n  \"tool\": \"think\",\n  \"thought\": \"Phân tích cảnh báo khẩn cấp trong câu: 'Tôi tức ngực khó thở 30 phút'\",\n  \"parameters\": {\n    \"red_flags\": [\"tức ngực\", \"khó thở\"],\n    \"time_critical\": true\n  }\n}\n→ Output: \n{\n  \"insight\": \"CẢNH BÁO: Triệu chứng tim mạch cấp tính\",\n  \"confidence\": 99,\n  \"next_action\": \"Trả ngay kết quả ER và gọi cấp cứu\"\n}\n```\n\n#### 2. Đánh giá độ tin cậy URL\n```json\n{\n  \"tool\": \"think\",\n  \"thought\": \"Xếp hạng độ ưu tiên các nguồn tìm được\",\n  \"parameters\": {\n    \"urls\": [\n      \"https://pcthealthcare.vn/benh-da-lieu\",\n      \"https://suckhoe.danang.gov.vn\",\n      \"https://benhvienblog.wordpress.com\"\n    ]\n  }\n}\n→ Output:\n{\n  \"insight\": \"Ưu tiên #1: pcthealthcare.vn (trust_score=100)\",\n  \"risk_flags\": [\"Nguồn wordpress.com: trust_score=15\"]\n}\n```\n\n#### 3. Giải quyết xung đột thông tin\n```json\n{\n  \"tool\": \"think\",\n  \"thought\": \"Giải quyết mâu thuẫn: med_RAG nói 'Khám cả CN' vs web_search nói 'Chỉ T2-T6'\",\n  \"parameters\": {\n    \"sources\": {\n      \"med_RAG\": {\"content\": \"Khám cả chủ nhật\", \"timestamp\": \"2024-01-01\"},\n      \"web_search\": {\"content\": \"Chỉ T2-T6\", \"source\": \"pcthealthcare.vn\"}\n    }\n  }\n}\n→ Output:\n{\n  \"insight\": \"Ưu tiên thông tin từ pcthealthcare.vn (mới nhất)\",\n  \"next_action\": \"Sử dụng dữ liệu web_search + kiểm tra fanpage\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -1800,
        20
      ],
      "id": "f8712804-6f29-4362-9f86-39f0a742c12e",
      "name": "Think",
      "disabled": true
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=Sử dụng tool này khi cần\n- Tìm kiếm thông tin bệnh viện y khoa Phan Châu Trinh\n- Tìm kiếm thông tin về bệnh tổng quát",
        "operation": "executeTool",
        "toolName": "search",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `đầu vào cho công cụ này phải có định dạng JSON như sau\n{\n  \"query\": <thông tin cần tra cứu>\n  \"max_results\": 5\n}`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -1660,
        -80
      ],
      "id": "25ca500c-69be-406e-967d-91f52a312cde",
      "name": "web_search",
      "credentials": {
        "mcpClientApi": {
          "id": "l7gNVLTzrA47Iigk",
          "name": "DuckDuckGo"
        }
      }
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Bạn là trợ lý y tế thông minh của Bệnh viện Y Phan Châu Trinh. Tuân thủ nghiêm ngặt quy trình sau:\n\n<QUY TRÌNH XỬ LÝ NÂNG CAO>\n  1. **KIỂM TRA BỆNH LÝ CÁ NHÂN**: (ƯU TIÊN)\n    Nếu phát hiện đại từ ngôi thứ nhất (\"tôi\", \"em\", \"mình\") hoặc liên quan đến bệnh lý cá nhân:\n    -> Dừng suy luận đồng thời sử dụng tool 'doctor' và câu hỏi trả ngược lại phải có ngôi hỏi phù hợp với giới tính đầu vào.\n \n  2. **THÔNG TIN BỆNH VIỆN**:\n    Dùng web_search khi med_RAG không có thông tin: \n    {\n      \"tool_sequence\": [\n        {\n          \"tool\": \"med_RAG\",\n          \"input\": \"[Truy vấn] Bệnh viện Y Phan Châu Trinh\"\n        },\n        {\n          \"tool\": \"web_search\",\n          \"query\": \"[Truy vấn] Bệnh viện Y Phan Châu Trinh\",\n          \"filter\": \"url contains 'pctuhealthcare'\"\n        }\n      ]\n    }\n    -> suy luận câu trả về\n    -> Nếu thông tin trả về được cho là không đủ và xuất hiện URL -> dùng công cụ \"fetch_content\" để lấy thông tin bổ sung.\n\n</QUY TRÌNH XỬ LÝ NÂNG CAO>\n\n<ĐỊNH DẠNG TRẢ LỜI>\n  Case 1: Nếu tool \"doctor\" trả về có chứa tag [semi_clinical_pred] thì giữ nguyên định dạng trả về từ tool \"doctor\" và dừng suy luận cùng lời khuyên\n  \n  Case 2:\n  [THÔNG TIN CHÍNH THỨC]\n  {content từ nguồn uy tín}\n  [CẬP NHẬT MỚI NHẤT]\n  {web_search summary}\n  [KHUYẾN NGHỊ]\n  - Truy cập: {link trực tiếp}\n  - Liên hệ: 1900.9099\n</ĐỊNH DẠNG TRẢ LỜI>\n\n<LƯU Ý QUAN TRỌNG>\n- Format input và output là plain JSON.\n- Số lần tối đa khi gọi tool là 2.\n</LƯU Ý QUAN TRỌNG>\n\n<Thông tin từ med_RAG>\n{context}\n</Thông tin từ med_RAG>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -2080,
        -420
      ],
      "id": "3ada88f8-9b39-4dd6-b161-8378f26eb34b",
      "name": "Orchestrate",
      "alwaysOutputData": false,
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "load",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.3,
      "position": [
        -1320,
        -180
      ],
      "id": "5a077c34-4cec-4f3d-b396-ad5490622d0b",
      "name": "Postgres PGVector Store",
      "credentials": {
        "postgres": {
          "id": "6iHsrxijv8bMwpA3",
          "name": "Postgres account 4"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-13T14:53:14.000Z",
  "versionId": "5118844c-8b6e-4edc-8e93-706122d5cb1d"
}