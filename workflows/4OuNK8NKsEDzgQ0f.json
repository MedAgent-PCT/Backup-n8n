{
  "active": false,
  "connections": {
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        []
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "PCT vector",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "PCT vector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PCT vector": {
      "main": [
        []
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "RAG PCT": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "RAG PCT",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "PCT vector",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-26T03:38:09.042Z",
  "id": "4OuNK8NKsEDzgQ0f",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "RAG_PCT",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=Cho tôi thông tin về  bệnh viện đại học y Phan Châu Trinh:\n1. Loại câu hỏi: {{ $json.category }}\n2. Hỏi về: {{ $json.query }}",
        "options": {
          "systemMessage": "=Bạn chuyên truy xuất thông tin về Bệnh viện \"Đại học Y Phan Châu Trinh\".\n\n# Quy tắc quan trọng:\n- **Luôn luôn truy vấn dữ liệu trước khi trả lời**, bất kể câu hỏi có đơn giản đến đâu.\n- **Luôn luôn phản hồi bằng thông tin được trích xuất từ dữ liệu hệ thống.**\n- **Không được bịa ra thông tin** nếu không tồn tại trong dữ liệu.\n\n## Nhiệm vụ của bạn:\n- Dựa trên phân thông tin đã trích xuất và câu hỏi người dùng, trả lời câu hỏi\n- Đối với các câu hỏi mang tính chất liệt kê, hãy liệt kê ngắn gọn và đầy đủ dựa trên thông tin đã trích xuất\n- Nếu **không tìm thấy thông tin**, hãy trả lời rằng **\"Tôi không tìm thấy thông tin liên quan trong hệ thống.\"**\n- Nếu **câu hỏi mơ hồ hoặc chưa đủ rõ**, hãy yêu cầu người dùng làm rõ.\n\n## Định dạng phản hồi:\n- Ngôn ngữ: **Tiếng Việt**\n- Trình bày dễ đọc, có xuống dòng cần thiết.\n- Phản hồi phải đúng theo định dạng:\n  - Loại câu hỏi: [Tên nhóm chủ đề/ không xác định]\n  - Phản hồi: [Câu trả lời cụ thể, rõ ràng/ yêu cầu làm rõ/ không có trong dữ liệu] "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        120,
        -80
      ],
      "id": "d480d708-6308-439d-9288-e7d1af3d3111",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        200,
        460
      ],
      "id": "5cc54726-aacf-4592-b904-025947293b0a",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "PpcktPH83DDrHTki",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "loader": "csvLoader",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        1220,
        240
      ],
      "id": "2312d916-faff-49c9-9b3f-bc6b69fa9cef",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "fileSelector": "/home/duckq1u/Downloads/output.csv",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        820,
        -60
      ],
      "id": "4105614e-8012-4c66-a205-53aa60ab9ac0",
      "name": "Read/Write Files from Disk",
      "notesInFlow": false
    },
    {
      "parameters": {
        "mode": "insert",
        "memoryKey": {
          "__rl": true,
          "mode": "list",
          "value": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.3,
      "position": [
        1040,
        40
      ],
      "id": "0011d84e-5730-4312-93d8-bbdf8fe87b20",
      "name": "PCT vector"
    },
    {
      "parameters": {
        "chunkSize": 1500,
        "chunkOverlap": 200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        980,
        380
      ],
      "id": "f91acf83-8546-4624-9177-11af496772c7",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "model": "meta-llama/llama-4-scout-17b-16e-instruct",
        "options": {
          "maxTokensToSample": 4096,
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -140,
        160
      ],
      "id": "46d86716-24f6-4d0a-993a-2ab8c21fd2a3",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "kbv8RI26Vl0qMMJu",
          "name": "Groq account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Gọi tool này để trích xuát các thông tin liên quan về bệnh viện đại học y Phan Châu Trinh",
        "memoryKey": {
          "__rl": true,
          "value": "vector_store_key",
          "mode": "list",
          "cachedResultName": "vector_store_key"
        },
        "topK": 10,
        "includeDocumentMetadata": false
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.3,
      "position": [
        360,
        180
      ],
      "id": "d10aed2a-34a4-4cb5-a85b-46d70f524450",
      "name": "RAG PCT"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {
          "maxOutputTokens": 10024,
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        40,
        160
      ],
      "id": "bf8477ac-46cf-4fe9-beb5-48d628b3b0c4",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "W6dxZLFCXIkzEHfX",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        200,
        160
      ],
      "id": "3f9b1e31-3255-4a3d-8759-f79f94a71fe5",
      "name": "Simple Memory",
      "disabled": true
    },
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "{\n  \"category\" : \"\",\n  \"query\" : \"\"\n}"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -160,
        -80
      ],
      "id": "51e127f6-92ca-4fab-ba97-5cdd414a0ffb",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        600,
        0
      ],
      "id": "68caf159-81ea-4689-be67-e008f465ae21",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        560,
        340
      ],
      "id": "565cdfd0-3663-43dd-8cf6-b19835b07300",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "W6dxZLFCXIkzEHfX",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "category": "Khoa",
          "query": "Các khoa"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-02T10:57:08.000Z",
  "versionId": "3e52b0f2-74f4-489e-a683-cc2f067d0a8c"
}